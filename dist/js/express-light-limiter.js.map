{"version":3,"sources":["express-light-limiter.js"],"names":["error","Error","lookup","maxRequestsPerQuantum","REQUESTS_PER_QUANTUM","quantum","QUANTUM","store","resolveLookup","req","Array","isArray","reduce","acc","cur","connection","remoteAddress","res","next","factor","userZone","findOrCreateUserZone","errTooManyRequests","isBanned","getCounter","ban","increment","refreshDestroyTimer"],"mappings":";;;;;;AAyBA;;;;AACA;;;;;;AA1BA;;;;;;;;;;;;;;;;;;;;;;;;;kBA4Be,YAKJ;AAAA,mEAAP,EAAO;;AAAA,wBAJTA,KAIS;AAAA,MAJTA,KAIS,8BAJD,IAAIC,KAAJ,CAAU,mBAAV,CAIC;AAAA,yBAHTC,MAGS;AAAA,MAHTA,MAGS,+BAHA,0BAGA;AAAA,mCAFTC,qBAES;AAAA,MAFTA,qBAES,yCAFe,qBAAWC,oBAE1B;AAAA,0BADTC,OACS;AAAA,MADTA,OACS,gCADC,qBAAWC,OACZ;;;AAET,MAAMC,QAAQ,yBAAeF,OAAf,CAAd;;AAEA,WAASG,aAAT,CAAuBC,GAAvB,EAA4BP,MAA5B,EAAoC;AAClC,QAAI,OAAOA,MAAP,KAAkB,QAAtB,EAAgC;AAC9B,aAAO,8BAAaO,GAAb,EAAkBP,MAAlB,EAA0B,CAA1B,CAAP;AACD,KAFD,MAEO,IAAI,OAAOA,MAAP,KAAkB,UAAtB,EAAkC;AACvC,aAAOA,OAAOO,GAAP,CAAP;AACD,KAFM,MAEA,IAAIC,MAAMC,OAAN,CAAcT,MAAd,CAAJ,EAA2B;AAChC,aAAOA,OAAOU,MAAP,CAAc,UAACC,GAAD,EAAMC,GAAN,EAAc;AACjC,eAAOD,OAAOL,cAAcC,GAAd,EAAmBK,GAAnB,CAAd;AACD,OAFM,EAEJ,KAFI,CAAP;AAGD;AACD,WAAOL,IAAIM,UAAJ,CAAeC,aAAtB;AACD;;AAED,SAAO,UAACP,GAAD,EAAMQ,GAAN,EAAWC,IAAX,EAAoB;AACzB,QAAMC,SAASX,cAAcC,GAAd,EAAmBP,MAAnB,CAAf;AACA,QAAIkB,WAAWb,MAAMc,oBAAN,CAA2BF,MAA3B,CAAf;AACA,QAAIG,qBAAqBtB,KAAzB;AACA,QAAIoB,SAASG,QAAb,EAAuB;AACrB,aAAOL,KAAKI,kBAAL,CAAP;AACD,KAFD,MAEO,IAAIF,SAASI,UAAT,MAAyBrB,qBAA7B,EAAoD;AACzDiB,eAASK,GAAT;AACA,aAAOP,KAAKI,kBAAL,CAAP;AACD;AACDF,aAASM,SAAT;AACAnB,UAAMoB,mBAAN,CAA0BP,QAA1B;AACAF;AACD,GAbD;AAcD,C","file":"express-light-limiter.js","sourcesContent":["/* @preserve\r\n * The MIT License (MIT)\r\n *\r\n * Copyright (c) 2016 Alexander Belov\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal\r\n * in the Software without restriction, including without limitation the rights\r\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n * copies of the Software, and to permit persons to whom the Software is\r\n * furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n * THE SOFTWARE.\r\n *\r\n */\r\n\r\nimport Storehouse from './Storehouse';\r\nimport lookupObject from 'object-path-wild';\r\n\r\nexport default ({\r\n  error = new Error('Too many requests'),\r\n  lookup = 'connection.remoteAddress',\r\n  maxRequestsPerQuantum = Storehouse.REQUESTS_PER_QUANTUM,\r\n  quantum = Storehouse.QUANTUM\r\n} = {}) => {\r\n  \r\n  const store = new Storehouse(quantum);\r\n  \r\n  function resolveLookup(req, lookup) {\r\n    if (typeof lookup === 'string') {\r\n      return lookupObject(req, lookup)[0];\r\n    } else if (typeof lookup === 'function') {\r\n      return lookup(req);\r\n    } else if (Array.isArray(lookup)) {\r\n      return lookup.reduce((acc, cur) => {\r\n        return acc || resolveLookup(req, cur);\r\n      }, false);\r\n    }\r\n    return req.connection.remoteAddress;\r\n  }\r\n  \r\n  return (req, res, next) => {\r\n    const factor = resolveLookup(req, lookup);\r\n    let userZone = store.findOrCreateUserZone(factor);\r\n    let errTooManyRequests = error;\r\n    if (userZone.isBanned) {\r\n      return next(errTooManyRequests);\r\n    } else if (userZone.getCounter() >= maxRequestsPerQuantum) {\r\n      userZone.ban();\r\n      return next(errTooManyRequests);\r\n    }\r\n    userZone.increment();\r\n    store.refreshDestroyTimer(userZone);\r\n    next();\r\n  };\r\n}"],"sourceRoot":"/source/"}