{"version":3,"sources":["UserZone.js"],"names":["isDebug","debug","log","UserZone","ip","quantum","_ip","_quantum","init","_uuid","v1","_counter","_isBanned","_firstActivityTimeMs","Date","getTime","currentTime","getFirstActivityTimeMs","reset","getId","Math","max","key","hasOwnProperty"],"mappings":";;;;;;qjBAAA;;;;;;;;;;;;;;;;;;;;;;;;;AAyBA;;;;;;;;AAEA,IAAMA,UAAU,KAAhB;AACA,IAAMC,QAAQ,SAARA,KAAQ;AAAA;;AAAA,SAAaD,WAAW,qBAAQE,GAAR,2BAAxB;AAAA,CAAd;;IAEqBC,Q;AAEnB,sBAAyC;AAAA,QAA7BC,EAA6B,yDAAxB,EAAwB;AAAA,QAApBC,OAAoB,yDAAV,IAAI,IAAM;;AAAA;;AACvC,SAAKC,GAAL,GAAWF,EAAX;AACA,SAAKG,QAAL,GAAgBF,OAAhB;AACA,SAAKG,IAAL;AACD;;;;2BAEM;AACL,WAAKC,KAAL,GAAa,eAAKC,EAAL,EAAb;AACA,WAAKC,QAAL,GAAgB,CAAhB;AACA,WAAKC,SAAL,GAAiB,KAAjB;AACA,WAAKC,oBAAL,GAA4B,IAAIC,IAAJ,GAAWC,OAAX,EAA5B;AACD;;;4BAEO;AACN,aAAO,KAAKN,KAAZ;AACD;;;iCAEY;AACX,aAAO,KAAKH,GAAZ;AACD;;;6CAEwB;AACvB,aAAO,KAAKO,oBAAZ;AACD;;;iCAEY;AACX,UAAIG,cAAc,IAAIF,IAAJ,GAAWC,OAAX,EAAlB;AACA,UAAI,KAAKE,sBAAL,KAAgC,KAAKV,QAArC,GAAgDS,WAApD,EAAiE;AAC/D,eAAO,KAAKL,QAAZ;AACD;AACD,WAAKO,KAAL;AACA,aAAO,KAAKP,QAAZ;AACD;;;4BAEO;AACN,WAAKA,QAAL,GAAgB,CAAhB;AACA,WAAKE,oBAAL,GAA4B,IAAIC,IAAJ,GAAWC,OAAX,EAA5B;AACAd,kBAAU,KAAKkB,KAAL,EAAV;AACD;;;gCAEW;AACV,WAAKR,QAAL;AACAV,kBAAU,KAAKkB,KAAL,EAAV,mBAAoC,KAAKR,QAAzC;AACD;;;+BAEU;AACT,WAAKA,QAAL,GAAgBS,KAAKC,GAAL,CAAS,CAAT,EAAY,KAAKV,QAAL,GAAgB,CAA5B,CAAhB;AACD;;;0BAEK;AACJ,WAAKC,SAAL,GAAiB,IAAjB;AACD;;;8BAMS;AACRX,YAAM,iBAAN,EAAyB,KAAKkB,KAAL,EAAzB;AACA,WAAK,IAAIG,GAAT,IAAgB,IAAhB,EAAsB;AACpB,YAAI,CAAC,KAAKC,cAAL,CAAoBD,GAApB,CAAL,EAA+B;AAC7B;AACD;AACD,eAAO,KAAMA,GAAN,CAAP;AACD;AACF;;;wBAZc;AACb,aAAO,KAAKV,SAAZ;AACD;;;;;;kBAzDkBT,Q","file":"UserZone.js","sourcesContent":["/* @preserve\r\n * The MIT License (MIT)\r\n *\r\n * Copyright (c) 2016 Alexander Belov\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal\r\n * in the Software without restriction, including without limitation the rights\r\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n * copies of the Software, and to permit persons to whom the Software is\r\n * furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n * THE SOFTWARE.\r\n *\r\n */\r\n\r\nimport uuid from 'uuid';\r\n\r\nconst isDebug = false;\r\nconst debug = (...args) => isDebug && console.log(...args);\r\n\r\nexport default class UserZone {\r\n  \r\n  constructor(ip = \"\", quantum = 5 * 1000) {\r\n    this._ip = ip;\r\n    this._quantum = quantum;\r\n    this.init();\r\n  }\r\n  \r\n  init() {\r\n    this._uuid = uuid.v1();\r\n    this._counter = 0;\r\n    this._isBanned = false;\r\n    this._firstActivityTimeMs = new Date().getTime();\r\n  }\r\n  \r\n  getId() {\r\n    return this._uuid;\r\n  }\r\n  \r\n  getAddress() {\r\n    return this._ip;\r\n  }\r\n  \r\n  getFirstActivityTimeMs() {\r\n    return this._firstActivityTimeMs;\r\n  }\r\n  \r\n  getCounter() {\r\n    let currentTime = new Date().getTime();\r\n    if (this.getFirstActivityTimeMs() + this._quantum > currentTime) {\r\n      return this._counter;\r\n    }\r\n    this.reset();\r\n    return this._counter;\r\n  }\r\n  \r\n  reset() {\r\n    this._counter = 0;\r\n    this._firstActivityTimeMs = new Date().getTime();\r\n    debug(`[${this.getId()}] Counter reset`);\r\n  }\r\n  \r\n  increment() {\r\n    this._counter++;\r\n    debug(`[${this.getId()}] Counter: ${this._counter}`);\r\n  }\r\n  \r\n  decrease() {\r\n    this._counter = Math.max(0, this._counter - 1);\r\n  }\r\n  \r\n  ban() {\r\n    this._isBanned = true;\r\n  }\r\n  \r\n  get isBanned() {\r\n    return this._isBanned;\r\n  }\r\n  \r\n  dispose() {\r\n    debug('Zone disposing:', this.getId());\r\n    for (let key in this) {\r\n      if (!this.hasOwnProperty(key)) {\r\n        continue;\r\n      }\r\n      delete this[ key ];\r\n    }\r\n  }\r\n}\r\n"],"sourceRoot":"/source/"}